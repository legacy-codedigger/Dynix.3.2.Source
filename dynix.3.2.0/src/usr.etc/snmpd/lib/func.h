/* $Copyright: $
 * Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991
 * Sequent Computer Systems, Inc.   All rights reserved.
 *  
 * This software is furnished under a license and may be used
 * only in accordance with the terms of that license and with the
 * inclusion of the above copyright notice.   This software may not
 * be provided or otherwise made available to, or used by, any
 * other person.  No title to or ownership of the software is
 * hereby transferred.
 */

#ident	"$Header: func.h 1.1 1991/07/31 00:05:54 $"

/*
 * func.h - this table is used to fill in the tree node for each mib 
 *          variable with the function that will resolve the variable.
 *          The table was built using the output of the printmib 
 *          program run against the mib-II description.
 */

/* $Log: func.h,v $
 *
 */

struct varToFunc {
	char	*var;
	int	(*getfunc)();
	int	(*setfunc)();
	};

struct varToFunc varToFuncTable[] = {
  { "org", var_generic, var_set_generic },
    { "dod", var_generic, var_set_generic },
      { "internet", var_generic, var_set_generic },
        { "mgmt", var_generic, var_set_generic },
          { "mib-2", var_generic, var_set_generic },
            { "system", var_generic, var_set_generic },
            { "interfaces", var_generic, var_set_generic },
            { "at", var_generic, var_set_generic },
            { "ip", var_generic, var_set_generic },
            { "icmp", var_generic, var_set_generic },
            { "tcp", var_generic, var_set_generic },
            { "udp", var_generic, var_set_generic },
            { "egp", var_generic, var_set_generic },
            { "transmission", var_generic, var_set_generic },
            { "snmp", var_generic, var_set_generic },
              { "sysDescr", var_system, var_set_system },
              { "sysObjectID", var_system, var_set_system },
              { "sysUpTime", var_system, var_set_system },
              { "sysContact", var_system, var_set_system },
              { "sysName", var_system, var_set_system },
              { "sysLocation", var_system, var_set_system },
              { "sysServices", var_system, var_set_system },
              { "ifNumber", var_if, var_set_generic },
              { "iftable", var_if, var_set_generic },
                { "ifEntry", var_ifTable, var_set_generic },
                  { "ifIndex", var_ifEntry, var_set_ifEntry },
                  { "ifDescr", var_ifEntry, var_set_ifEntry },
                  { "ifType", var_ifEntry, var_set_ifEntry },
                  { "ifMtu", var_ifEntry, var_set_ifEntry },
                  { "ifSpeed", var_ifEntry, var_set_ifEntry },
                  { "ifPhysAddress", var_ifEntry, var_set_ifEntry },
                  { "ifAdminStatus", var_ifEntry, var_set_ifEntry },
                  { "ifOperStatus", var_ifEntry, var_set_ifEntry },
                  { "ifLastChange", var_ifEntry, var_set_ifEntry },
                  { "ifInOctets", var_ifEntry, var_set_ifEntry },
                  { "ifInUcastPkts", var_ifEntry, var_set_ifEntry },
                  { "ifInNUcastPkts", var_ifEntry, var_set_ifEntry },
                  { "ifInDiscards", var_ifEntry, var_set_ifEntry },
                  { "ifInErrors", var_ifEntry, var_set_ifEntry },
                  { "ifInUnknownProtos", var_ifEntry, var_set_ifEntry },
                  { "ifOutOctets", var_ifEntry, var_set_ifEntry },
                  { "ifOutUcastPkts", var_ifEntry, var_set_ifEntry },
                  { "ifOutNUcastPkts", var_ifEntry, var_set_ifEntry },
                  { "ifOutDiscards", var_ifEntry, var_set_ifEntry },
                  { "ifOutErrors", var_ifEntry, var_set_ifEntry },
                  { "ifOutQLen", var_ifEntry, var_set_ifEntry },
                  { "ifSpecific", var_ifEntry, var_set_ifEntry },
              { "atTable", var_at, var_set_generic },
                { "atEntry", var_atTable, var_set_generic },
                  { "atIfIndex", var_atEntry, var_set_atEntry },
                  { "atPhysAddress", var_atEntry, var_set_atEntry },
                  { "atNetAddress", var_atEntry, var_set_atEntry },
              { "ipForwarding", var_ip, var_set_ip },
              { "ipDefaultTTL", var_ip, var_set_ip },
              { "ipInReceives", var_ip, var_set_ip },
              { "ipInHdrErrors", var_ip, var_set_ip },
              { "ipInAddrErrors", var_ip, var_set_ip },
              { "ipForwDatagrams", var_ip, var_set_ip },
              { "ipInUnknownProtos", var_ip, var_set_ip },
              { "ipInDiscards", var_ip, var_set_ip },
              { "ipInDelivers", var_ip, var_set_ip },
              { "ipOutRequests", var_ip, var_set_ip },
              { "ipOutDiscards", var_ip, var_set_ip },
              { "ipOutNoRoutes", var_ip, var_set_ip },
              { "ipReasmTimeout", var_ip, var_set_ip },
              { "ipReasmReqds", var_ip, var_set_ip },
              { "ipReasmOKs", var_ip, var_set_ip },
              { "ipReasmFails", var_ip, var_set_ip },
              { "ipFragOKs", var_ip, var_set_ip },
              { "ipFragFails", var_ip, var_set_ip },
              { "ipFragCreates", var_ip, var_set_ip },
              { "ipAddrTable", var_ipAddrEntry, var_set_generic },
              { "ipRoutingTable", var_ipRouteEntry, var_set_generic },
              { "ipNetToMediaTable", var_ipNetToMediaEntry, var_set_generic },
                { "ipAddrEntry", var_ipAddrTable, var_set_generic },
                  { "ipAdEntAddr", var_ipAddrEntry, var_set_generic },
                  { "ipAdEntIfIndex", var_ipAddrEntry, var_set_generic },
                  { "ipAdEntNetMask", var_ipAddrEntry, var_set_generic },
                  { "ipAdEntBcastAddr", var_ipAddrEntry, var_set_generic },
                  { "ipAdEntReasmMaxSiz", var_ipAddrEntry, var_set_generic },
                { "ipRouteEntry", var_ipRouteTable, var_set_generic },
                  { "ipRouteDest", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteIfIndex", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteMetric1", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteMetric2", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteMetric3", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteMetric4", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteNextHop", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteType", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteProto", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteAge", var_ipRouteEntry, var_set_ipRouteEntry },
                  { "ipRouteMask", var_ipRouteEntry, var_set_ipRouteEntry },
                { "ipNetToMediaEntry", var_ipNetToMediaTable, var_set_generic },
                  { "ipNetToMediaIfIndex", var_ipNetToMediaEntry, var_set_ipNetToMediaEntry },
                  { "ipNetToMediaPhysAddress", var_ipNetToMediaEntry, var_set_ipNetToMediaEntry },
                  { "ipNetToMediaNetAddress", var_ipNetToMediaEntry, var_set_ipNetToMediaEntry },
                  { "ipNetToMediaType", var_ipNetToMediaEntry, var_set_ipNetToMediaEntry },
              { "icmpInMsgs", var_icmp, var_set_generic },
              { "icmpInErrors", var_icmp, var_set_generic },
              { "icmpInDestUnreachs", var_icmp, var_set_generic },
              { "icmpInTimeExcds", var_icmp, var_set_generic },
              { "icmpInParmProbs", var_icmp, var_set_generic },
              { "icmpInSrcQuenchs", var_icmp, var_set_generic },
              { "icmpInRedirects", var_icmp, var_set_generic },
              { "icmpInEchos", var_icmp, var_set_generic },
              { "icmpInEchoReps", var_icmp, var_set_generic },
              { "icmpInTimestamps", var_icmp, var_set_generic },
              { "icmpInTimestampReps", var_icmp, var_set_generic },
              { "icmpInAddrMasks", var_icmp, var_set_generic },
              { "icmpInAddrMaskReps", var_icmp, var_set_generic },
              { "icmpOutMsgs", var_icmp, var_set_generic },
              { "icmpOutErrors", var_icmp, var_set_generic },
              { "icmpOutDestUnreachs", var_icmp, var_set_generic },
              { "icmpOutTimeExcds", var_icmp, var_set_generic },
              { "icmpOutParmProbs", var_icmp, var_set_generic },
              { "icmpOutSrcQuenchs", var_icmp, var_set_generic },
              { "icmpOutRedirects", var_icmp, var_set_generic },
              { "icmpOutEchos", var_icmp, var_set_generic },
              { "icmpOutEchoReps", var_icmp, var_set_generic },
              { "icmpOutTimestamps", var_icmp, var_set_generic },
              { "icmpOutTimestampReps", var_icmp, var_set_generic },
              { "icmpOutAddrMasks", var_icmp, var_set_generic },
              { "icmpOutAddrMaskReps", var_icmp, var_set_generic },
              { "tcpRtoAlgorithm", var_tcp, var_set_generic },
              { "tcpRtoMin", var_tcp, var_set_generic },
              { "tcpRtoMax", var_tcp, var_set_generic },
              { "tcpMaxConn", var_tcp, var_set_generic },
              { "tcpActiveOpens", var_tcp, var_set_generic },
              { "tcpPassiveOpens", var_tcp, var_set_generic },
              { "tcpAttemptFails", var_tcp, var_set_generic },
              { "tcpEstabResets", var_tcp, var_set_generic },
              { "tcpCurrEstab", var_tcp, var_set_generic },
              { "tcpInSegs", var_tcp, var_set_generic },
              { "tcpOutSegs", var_tcp, var_set_generic },
              { "tcpRetransSegs", var_tcp, var_set_generic },
              { "tcpConnTable", var_tcp, var_set_generic },
              { "tcpInErrs", var_tcp, var_set_generic },
              { "tcpOutRsts", var_tcp, var_set_generic },
                { "tcpConnEntry", var_tcpConnEntry, var_set_generic },
                  { "tcpConnState", var_tcpConnEntry, var_set_generic },
                  { "tcpConnLocalAddress", var_tcpConnEntry, var_set_generic },
                  { "tcpConnLocalPort", var_tcpConnEntry, var_set_generic },
                  { "tcpConnRemAddress", var_tcpConnEntry, var_set_generic },
                  { "tcpConnRemPort", var_tcpConnEntry, var_set_generic },
              { "udpInDatagrams", var_udp, var_set_generic },
              { "udpNoPorts", var_udp, var_set_generic },
              { "udpInErrors", var_udp, var_set_generic },
              { "udpOutDatagrams", var_udp, var_set_generic },
              { "udpTable", var_udp, var_set_generic },
                { "udpEntry", var_udpTable, var_set_generic },
                  { "udpLocalAddress", var_udpEntry, var_set_generic },
                  { "udpLocalPort", var_udpEntry, var_set_generic },
              { "egpInMsgs", var_egp, var_set_generic },
              { "egpInErrors", var_egp, var_set_generic },
              { "egpOutMsgs", var_egp, var_set_generic },
              { "egpOutErrors", var_egp, var_set_generic },
              { "egpNeighTable", var_egp, var_set_generic },
              { "egpAs", var_egp, var_set_generic },
                { "egpNeighEntry", var_egp, var_set_generic },
                  { "egpNeighState", var_egp, var_set_generic },
                  { "egpNeighAddr", var_egp, var_set_generic },
                  { "egpNeighAs", var_egp, var_set_generic },
                  { "egpNeighInMsgs", var_egp, var_set_generic },
                  { "egpNeighInErrs", var_egp, var_set_generic },
                  { "egpNeighOutMsgs", var_egp, var_set_generic },
                  { "egpNeighOutErrs", var_egp, var_set_generic },
                  { "egpNeighInErrMsgs", var_egp, var_set_generic },
                  { "egpNeighOutErrMsgs", var_egp, var_set_generic },
                  { "egpNeighStateUps", var_egp, var_set_generic },
                  { "egpNeighStateDowns", var_egp, var_set_generic },
                  { "egpNeighIntervalHello", var_egp, var_set_generic },
                  { "egpNeighIntervalPoll", var_egp, var_set_generic },
                  { "egpNeighMode", var_egp, var_set_generic },
                  { "egpNeighEventTrigger", var_egp, var_set_generic },
              { "snmpInPkts", var_snmp, var_set_snmp },
              { "snmpOutPkts", var_snmp, var_set_snmp },
              { "snmpInBadVersions", var_snmp, var_set_snmp },
              { "snmpInBadCommunityNames", var_snmp, var_set_snmp },
              { "snmpInBadCommunityUses", var_snmp, var_set_snmp },
              { "snmpInASNParseErrs", var_snmp, var_set_snmp },
              { "snmpInBadTypes", var_snmp, var_set_snmp },
              { "snmpInTooBigs", var_snmp, var_set_snmp },
              { "snmpInNoSuchNames", var_snmp, var_set_snmp },
              { "snmpInBadValues", var_snmp, var_set_snmp },
              { "snmpInReadOnlys", var_snmp, var_set_snmp },
              { "snmpInGenErrs", var_snmp, var_set_snmp },
              { "snmpInTotalReqVars", var_snmp, var_set_snmp },
              { "snmpInTotalSetVars", var_snmp, var_set_snmp },
              { "snmpInGetRequests", var_snmp, var_set_snmp },
              { "snmpInGetNexts", var_snmp, var_set_snmp },
              { "snmpInSetRequests", var_snmp, var_set_snmp },
              { "snmpInGetResponses", var_snmp, var_set_snmp },
              { "snmpInTraps", var_snmp, var_set_snmp },
              { "snmpOutTooBigs", var_snmp, var_set_snmp },
              { "snmpOutNoSuchNames", var_snmp, var_set_snmp },
              { "snmpOutBadValues", var_snmp, var_set_snmp },
              { "snmpOutReadOnlys", var_snmp, var_set_snmp },
              { "snmpOutGenErrs", var_snmp, var_set_snmp },
              { "snmpOutGetRequests", var_snmp, var_set_snmp },
              { "snmpOutGetNexts", var_snmp, var_set_snmp },
              { "snmpOutSetRequests", var_snmp, var_set_snmp },
              { "snmpOutGetResponses", var_snmp, var_set_snmp },
              { "snmpOutTraps", var_snmp, var_set_snmp },
              { "snmpEnableAuthTraps", var_snmp, var_set_snmp }
 };
