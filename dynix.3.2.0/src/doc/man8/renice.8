.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: renice.8 1.4 86/05/13 $
.TH RENICE 8 "\*(V)" "4BSD"
.SH NAME
renice \- alter priority of running processes
.SH SYNOPSIS
.B /etc/renice
priority [ [
.B \-p
] pid ... ] [ [
.B \-g
] pgrp ... ] [ [
.B \-u
] user ... ]
.SH DESCRIPTION
.I Renice
alters the 
scheduling priority of one or more running processes.
The
.I who
parameters are interpreted as process ID's, process group
ID's, or user names.
.IR Renice 'ing
a process group causes all processes in the process group
to have their scheduling priority altered.  
.IR Renice 'ing
a user causes all processes owned by the user to have
their scheduling priority altered.
By default, the processes to be affected are specified by
their process ID's.  To force 
.I who
parameters to be interpreted as process group ID's, a
.B \-g 
may be specified.  To force the
.I who
parameters to be interpreted as user names, a
.B \-u
may be given.  Supplying
.B \-p
will reset 
.I who
interpretation to be (the default) process ID's.
For example,
.sp
	/etc/renice +1 987 -u daemon root -p 32 
.sp
would change the priority of process ID's 987 and 32, and
all processes owned by users daemon and root.
.PP
Users other than the super-user may only alter the priority of
processes they own,
and can only monotonically increase their ``nice value''
within the range 0 to PRIO_MIN (20).
(This prevents overriding administrative fiats.)
The super-user
may alter the priority of any process
and set the priority to any value in the range PRIO_MAX (\-20)
to PRIO_MIN.
Useful priorities are:
19 (the affected processes will run only when nothing else
in the system wants to),
0 (the ``base'' scheduling priority),
anything negative (to make things go very fast).
.SH FILES
/etc/passwd	to map user names to user ID's
.SH SEE ALSO
getpriority(2), setpriority(2)
.SH BUGS
If you make the priority very negative,
then the process cannot be interrupted.
To regain control you make the priority greater than zero.
Non super-users can not increase scheduling priorities of their own processes,
even if they were the ones that decreased the priorities in the first place.
