.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: uupoll.8c 1.2 87/06/18 $
.TH UUPOLL 8C "\*(V)" "4BSD"
.\"
.\"	@(#)uupoll.8c	6.1 (Berkeley) 4/24/86
.\"
.UC 6
.SH NAME
uupoll \- poll a remote \s-1UUCP\s+1 site
.SH SYNOPSIS
.B uupoll
[
.BI \-g grade
] [
.B \-n
]
.I system
.SH DESCRIPTION
.I Uupoll
is used to force a poll of a remote system. It queues a null job for the
remote system and then invokes
.IR uucico (8C).
.PP
The following options are available:
.TP 8
.BI \-g grade
Only send jobs of grade
.I grade
or higher on this call.
.TP 8
.B \-n
Queue the null job, but do not invoke
.IR uucico .
.PP
.I Uupoll
is usually run by
.IR cron (5)
or by a user who wants to hurry a job along. A typical entry in
.I crontab
could be:
.Ps
0	0,8,16	*	*	*	/usr/bin/uupoll ihnp4
0	4,12,20	*	*	*	/usr/bin/uupoll ucbvax
.Pe
This polls
.B ihnp4
at midnight, 0800, and 1600;
and
.B ucbvax
at 0400, noon, and 2000.
.PP
If the local machine is already running
.I uucico
every
hour and has a limited number of outgoing modems, a more elegant approach
might be:
.Ps
0	0,8,16	*	*	*	/usr/bin/uupoll -n ihnp4
0	4,12,20	*	*	*	/usr/bin/uupoll -n ucbvax
5	*		*	*	*	/usr/lib/uucp/uucico -r1
.Pe
This queues null jobs for the remote sites at the top of hour; they
are processed by
.I uucico
when it runs five minutes later.
.SH FILES
.ta \w'/usr/spool/uucp/   'u
.nf
/usr/lib/uucp/	UUCP internal files/utilities
/usr/spool/uucp/	Spool directory
.fi
.SH SEE ALSO
uucp(1C), uux(1C), uucico(8C)
