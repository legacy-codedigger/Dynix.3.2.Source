.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
. \" $Header: vi.chars 1.3 86/03/06 $
.bd S 3
..pn 21
.de iP
.IP "\f3\\$1\f1" \\$2
..
.SH
Appendix: character functions
.PP
This appendix gives the uses the editor makes of each character.  The
characters are presented in their order in the \s-2ASCII\s0 character
set:  Control characters come first, then most special characters, then
the digits, upper and then lower case characters.
.PP
For each character we tell a meaning it has as a command and any meaning it
has during an insert.
If it has only meaning as a command, then only this is discussed.
Section numbers in parentheses indicate where the character is discussed;
a `f' after the section number means that the character is mentioned
in a footnote.
.iP "^@" 15
Not a command character.
If typed as the first character of an insertion it is replaced with the
last text inserted, and the insert terminates.  Only 128 characters are
saved from the last insert; if more characters were inserted the mechanism
is not available.
A \f3^@\f1 cannot be part of the file due to the editor implementation
(7.5f).
.iP "^A" 15
Unused.
.iP "^B" 15
Backward window.
A count specifies repetition.
Two lines of continuity are kept if possible (2.1, 6.1, 7.2).
.iP "^C" 15
Unused.
.iP "^D" 15
As a command, scrolls down a half-window of text.  
A count gives the number of (logical) lines to scroll, and is remembered
for future \f3^D\f1 and \f3^U\f1 commands (2.1, 7.2).
During an insert, backtabs over \f2autoindent\f1 white space at the beginning
of a line (6.6, 7.5); this white space cannot be backspaced over.
.iP "^E" 15
Exposes one more line below the current screen in the file, leaving
the cursor where it is if possible.
(Version 3 only.)
.iP "^F" 15
Forward window.  A count specifies repetition.
Two lines of continuity are kept if possible (2.1, 6.1, 7.2).
.iP "^G" 15
Equivalent to \f3:f\f1\s-2CR\s0, printing the current file, whether
it has been modified, the current line number and the number of lines
in the file, and the percentage of the way through the file that you
are.
.iP "^H (\f1\s-2BS\s0\fP)" 15
Same as
.B "left arrow" .
(See
.B h ).
During an insert, eliminates the last input character, backing over it
but not erasing it; it remains so you can see what you typed if you
wish to type something only slightly different (3.1, 7.5).
.iP "^I\ (\f1\s-2TAB\s0\fP)" 15
Not a command character.
When inserted it prints as some
number of spaces.
When the cursor is at a tab character it rests at the last of the spaces
which represent the tab.
The spacing of tabstops is controlled by the \f2tabstop\f1 option (4.1, 6.6).
.iP "^J\ (\f1\s-2LF\s0\fP)" 15
Same as
.B "down arrow"
(see
.B j ).
.iP "^K" 15
Unused.
.iP "^L" 15
The \s-2ASCII\s0 formfeed character, this causes the screen to be cleared
and redrawn.  This is useful after a transmission error, if characters
typed by a program other than the editor scramble the screen,
or after output is stopped by an interrupt (5.4, 7.2f).
.iP "^M\ (\f1\s-2CR\s0\fP)" 15
A carriage return advances to the next line, at the first non-white position
in the line.  Given a count, it advances that many lines (2.3).
During an insert, a \s-2CR\s0 causes the insert to continue onto
another line (3.1).
.iP "^N" 15
Same as
.B "down arrow"
(see
.B j ).
.iP "^O" 15
Unused.
.iP "^P" 15
Same as
.B "up arrow"
(see
.B k ).
.iP "^Q" 15
Not a command character.
In input mode,
.B ^Q
quotes the next character, the same as
.B ^V ,
except that some teletype drivers will eat the
.B ^Q
so that the editor never sees it.
.iP "^R" 15
Redraws the current screen, eliminating logical lines not corresponding
to physical lines (lines with only a single @ character on them).
On hardcopy terminals in \f2open\f1 mode, retypes the current line
(5.4, 7.2, 7.8).
.iP "^S" 15
Unused.  Some teletype drivers use
.B ^S
to suspend output until
.B ^Q is pressed.
.iP "^T" 15
Not a command character.
During an insert, with \f2autoindent\f1 set and at the beginning of the
line, inserts \f2shiftwidth\f1 white space.
.iP "^U" 15
Scrolls the screen up, inverting \f3^D\f1 which scrolls down.  Counts work as
they do for \f3^D\f1, and the previous scroll amount is common to both.
On a dumb terminal, \f3^U\f1 will often necessitate clearing and redrawing
the screen further back in the file (2.1, 7.2).
.iP "^V" 15
Not a command character.
In input mode, quotes the next character so that it is possible
to insert non-printing and special characters into the file (4.2, 7.5).
.iP "^W" 15
Not a command character.
During an insert, backs up as \f3b\f1 would in command mode; the deleted
characters remain on the display (see \f3^H\f1) (7.5).
.iP "^X" 15
Unused.
.iP "^Y" 15
Exposes one more line above the current screen, leaving the cursor where
it is if possible.  (No mnemonic value for this key; however, it is next
to \f3^U\f1 which scrolls up a bunch.)
(Version 3 only.)
.iP "^Z" 15
If supported by the Unix system,
stops the editor, exiting to the top level shell.
Same as \f3:stop\fP\s-2CR\s0.
Otherwise, unused.
.iP "^[\ (\f1\s-2ESC\s0\fP)" 15
Cancels a partially formed command, such as a \f3z\f1 when no following
character has yet been given; terminates inputs on the last line (read
by commands such as \f3: /\f1 and \f3?\f1); ends insertions of new text
into the buffer.
If an \s-2ESC\s0 is given when quiescent in command state, the editor
rings the bell or flashes the screen.  You can thus hit \s-2ESC\s0 if
you don't know what is happening till the editor rings the bell.
If you don't know if you are in insert mode you can type \s-2ESC\s0\f3a\f1,
and then material to be input; the material will be inserted correctly
whether or not you were in insert mode when you started (1.5, 3.1, 7.5).
.iP "^\e" 15
Unused.
.iP "^]" 15
Searches for the word which is after the cursor as a tag.  Equivalent
to typing \f3:ta\f1, this word, and then a \s-2CR\s0.
Mnemonically, this command is ``go right to'' (7.3).
.iP "^\(ua" 15
Equivalent to \f3:e #\f1\s-2CR\s0, returning to the previous position
in the last edited file, or editing a file which you specified if you
got a `No write since last change diagnostic' and do not want to have
to type the file name again (7.3).
(You have to do a \f3:w\f1 before \f3^\(ua\f1
will work in this case.  If you do not wish to write the file you should
do \f3:e!\ #\f1\s-2CR\s0 instead.)
.iP "^_" 15
Unused.
Reserved as the command character for the
Tektronix 4025 and 4027 terminal.
.iP "\f1\s-2SPACE\s0\fP" 15
Same as
.B "right arrow"
(see
.B l ).
.iP "!" 15
An operator, which processes lines from the buffer with reformatting commands.
Follow \f3!\f1 with the object to be processed, and then the command name
terminated by \s-2CR\s0.  Doubling \f3!\f1 and preceding it by a count
causes count lines to be filtered; otherwise the count
is passed on to the object after the \f3!\f1.  Thus \f32!}\f1\f2fmt\f1\s-2CR\s0
reformats the next two paragraphs by running them through the program
\f2fmt\f1.  If you are working on \s-2LISP\s0,
the command \f3!%\f1\f2grind\f1\s-2CR\s0,*
.FS
*Both
.I fmt
and
.I grind
are Berkeley programs and may not be present at all installations.
.FE
given at the beginning of a
function, will run the text of the function through the \s-2LISP\s0 grinder
(6.7, 7.3).
To read a file or the output of a command into the buffer use \f3:r\f1 (7.3).
To simply execute a command use \f3:!\f1 (7.3).
.tr "
.iP  15
Precedes a named buffer specification.  There are named buffers \f31\-9\f1
used for saving deleted text and named buffers \f3a\-z\f1 into which you can
place text (4.3, 6.3)
.tr 
.iP "#" 15
The macro character which, when followed by a number, will substitute
for a function key on terminals without function keys (6.9).
In input mode, 
if this is your erase character, it will delete the last character
you typed in input mode, and must be preceded with a \f3\e\f1 to insert
it, since it normally backs over the last input character you gave.
.iP "$" 15
Moves to the end of the current line.  If you \f3:se list\f1\s-2CR\s0,
then the end of each line will be shown by printing a \f3$\f1 after the
end of the displayed text in the line.  Given a count, advances to the
count'th following end of line; thus \f32$\f1 advances to the end of the
following line.
.iP "%" 15
Moves to the parenthesis or brace \f3{ }\f1 which balances the parenthesis
or brace at the current cursor position.
.iP "&" 15
A synonym for \f3:&\f1\s-2CR\s0, by analogy with the
.I ex
.B &
command.
.iP "\(aa" 15
When followed by a \f3\(aa\f1 returns to the previous context at the
beginning of a line.  The previous context is set whenever the current
line is moved in a non-relative way.
When followed by a letter \f3a\f1\-\f3z\f1, returns to the line which
was marked with this letter with a \f3m\f1 command, at the first non-white
character in the line. (2.2, 5.3).
When used with an operator such as \f3d\f1, the operation takes place
over complete lines; if you use \f3\(ga\f1, the operation takes place
from the exact marked place to the current cursor position within the
line.
.iP "(" 15
Retreats to the beginning of a
sentence, or to the beginning of a \s-2LISP\s0 s-expression
if the \f2lisp\f1 option is set.
A sentence ends at a \f3. !\f1 or \f3?\f1 which is followed by either
the end of a line or by two spaces.  Any number of closing \f3) ] "\f1
and \f3\(aa\f1 characters may appear after the \f3. !\f1 or \f3?\f1,
and before the spaces or end of line.  Sentences also begin
at paragraph and section boundaries
(see \f3{\f1 and \f3[[\f1 below).
A count advances that many sentences (4.2, 6.8).
.iP ")" 15
Advances to the beginning of a sentence.
A count repeats the effect.
See \f3(\f1 above for the definition of a sentence (4.2, 6.8).
.iP "*" 15
Unused.
.iP "+" 15
Same as \s-2CR\s0 when used as a command.
.iP "," 15
Reverse of the last \f3f F t\f1 or \f3T\f1 command, looking the other way
in the current line.  Especially useful after hitting too many \f3;\f1
characters.  A count repeats the search.
.iP "\-" 15
Retreats to the previous line at the first non-white character.
This is the inverse of \f3+\f1 and \s-2RETURN\s0.
If the line moved to is not on the screen, the screen is scrolled, or
cleared and redrawn if this is not possible.
If a large amount of scrolling would be required the screen is also cleared
and redrawn, with the current line at the center (2.3).
.iP "\&." 15
Repeats the last command which changed the buffer.  Especially useful
when deleting words or lines; you can delete some words/lines and then
hit \f3.\f1 to delete more and more words/lines.
Given a count, it passes it on to the command being repeated.  Thus after
a \f32dw\f1, \f33.\f1 deletes three words (3.3, 6.3, 7.2, 7.4).
.iP "/" 15
Reads a string from the last line on the screen, and scans forward for
the next occurrence of this string.  The normal input editing sequences may
be used during the input on the bottom line; an returns to command state
without ever searching.
The search begins when you hit \s-2CR\s0 to terminate the pattern;
the cursor moves to the beginning of the last line to indicate that the search
is in progress; the search may then
be terminated with a \s-2DEL\s0 or \s-2RUB\s0, or by backspacing when
at the beginning of the bottom line, returning the cursor to
its initial position.
Searches normally wrap end-around to find a string
anywhere in the buffer.
.IP
When used with an operator the enclosed region is normally affected.
By mentioning an
offset from the line matched by the pattern you can force whole lines
to be affected.  To do this give a pattern with a closing
a closing \f3/\f1 and then an offset \f3+\f1\f2n\f1 or \f3\-\f1\f2n\f1.
.IP
To include the character \f3/\f1 in the search string, you must escape
it with a preceding \f3\e\f1.
A \f3\(ua\f1 at the beginning of the pattern forces the match to occur
at the beginning of a line only; this speeds the search.  A \f3$\f1 at
the end of the pattern forces the match to occur at the end of a line
only.
More extended pattern matching is available, see section 7.4;
unless you set \f3nomagic\f1 in your \f2\&.exrc\f1 file you will have
to preceed the characters \f3. [ *\f1 and \f3~\f1 in the search pattern
with a \f3\e\f1 to get them to work as you would naively expect (1.5, 2,2,
6.1, 7.2, 7.4).
.iP "0" 15
Moves to the first character on the current line.
Also used, in forming numbers, after an initial \f31\f1\-\f39\f1.
.iP "1\-9" 15
Used to form numeric arguments to commands (2.3, 7.2).
.iP ":" 15
A prefix to a set of commands for file and option manipulation and escapes
to the system.  Input is given on the bottom line and terminated with
an \s-2CR\s0, and the command then executed.  You can return to where
you were by hitting \s-2DEL\s0 or \s-2RUB\s0 if you hit \f3:\f1 accidentally
(see primarily 6.2 and 7.3).
.iP ";" 15
Repeats the last single character find which used \f3f F t\f1 or \f3T\f1.
A count iterates the basic scan (4.1).
.iP "<" 15
An operator which shifts lines left one \f2shiftwidth\f1, normally 8
spaces.  Like all operators, affects lines when repeated, as in
\f3<<\f1.  Counts are passed through to the basic object, thus \f33<<\f1
shifts three lines (6.6, 7.2).
.iP "=" 15
Reindents line for \s-2LISP\s0, as though they were typed in with \f2lisp\f1
and \f2autoindent\f1 set (6.8).
.iP ">" 15
An operator which shifts lines right one \f2shiftwidth\f1, normally 8
spaces.  Affects lines when repeated as in \f3>>\f1.  Counts repeat the
basic object (6.6, 7.2).
.iP "?" 15
Scans backwards, the opposite of \f3/\f1.  See the \f3/\f1 description
above for details on scanning (2.2, 6.1, 7.4).
.iP "@" 15
A macro character (6.9).  If this is your kill character, you must escape it with a \e
to type it in during input mode, as it normally backs over the input you
have given on the current line (3.1, 3.4, 7.5).
.iP "A" 15
Appends at the end of line, a synonym for \f3$a\f1 (7.2).
.iP "B" 15
Backs up a word, where words are composed of non-blank sequences, placing
the cursor at the beginning of the word.  A count repeats the effect
(2.4).
.iP "C" 15
Changes the rest of the text on the current line; a synonym for \f3c$\f1.
.iP "D" 15
Deletes the rest of the text on the current line; a synonym for \f3d$\f1.
.iP "E" 15
Moves forward to the end of a word, defined as blanks and non-blanks,
like \f3B\f1 and \f3W\f1.  A count repeats the effect.
.iP "F" 15
Finds a single following character, backwards in the current line.
A count repeats this search that many times (4.1).
.iP "G" 15
Goes to the line number given as preceding argument, or the end of the
file if no preceding count is given.  The screen is redrawn with the
new current line in the center if necessary (7.2).
.iP "H" 15
.B "Home arrow" .
Homes the cursor to the top line on the screen.  If a count is given,
then the cursor is moved to the count'th line on the screen.
In any case the cursor is moved to the first non-white character on the
line.  If used as the target of an operator, full lines are affected
(2.3, 3.2).
.iP "I" 15
Inserts at the beginning of a line; a synonym for \f3\(uai\f1.
.iP "J" 15
Joins together lines, supplying appropriate white space: one space between
words, two spaces after a \f3.\f1, and no spaces at all if the first
character of the joined on line is \f3)\f1.  A count causes that many
lines to be joined rather than the default two (6.5, 7.1f).
.iP "K" 15
Unused.
.iP "L" 15
Moves the cursor to the first non-white character of the last line on
the screen.  With a count, to the first non-white of the count'th line
from the bottom.  Operators affect whole lines when used with \f3L\f1
(2.3).
.iP "M" 15
Moves the cursor to the middle line on the screen, at the first non-white
position on the line (2.3).
.iP "N" 15
Scans for the next match of the last pattern given to
\f3/\f1 or \f3?\f1, but in the reverse direction; this is the reverse
of \f3n\f1.
.iP "O" 15
Opens a new line above the current line and inputs text there up to an
\s-2ESC\s0.  A count can be used on dumb terminals to specify a number
of lines to be opened; this is generally obsolete, as the \f2slowopen\f1
option works better (3.1).
.iP "P" 15
Puts the last deleted text back before/above the cursor.  The text goes
back as whole lines above the cursor if it was deleted as whole lines.
Otherwise the text is inserted between the characters before and at the
cursor.  May be preceded by a named buffer specification \f3"\f1\f2x\f1
to retrieve the contents of the buffer; buffers \f31\f1\-\f39\f1 contain
deleted material, buffers \f3a\f1\-\f3z\f1 are available for general
use (6.3).
.iP "Q" 15
Quits from \f2vi\f1 to \f2ex\f1 command mode.  In this mode, whole lines
form commands, ending with a \s-2RETURN\s0.  You can give all the \f3:\f1
commands; the editor supplies the \f3:\f1 as a prompt (7.7).
.iP "R" 15
Replaces characters on the screen with characters you type (overlay fashion).
Terminates with an \s-2ESC\s0.
.iP "S" 15
Changes whole lines, a synonym for \f3cc\f1.  A count substitutes for
that many lines.  The lines are saved in the numeric buffers, and erased
on the screen before the substitution begins.
.iP "T" 15
Takes a single following character, locates the character before the
cursor in the current line, and places the cursor just after that character.
A count repeats the effect.  Most useful with operators such as \f3d\f1
(4.1).
.iP "U" 15
Restores the current line to its state before you started changing it
(3.5).
.iP "V" 15
Unused.
.iP "W" 15
Moves forward to the beginning of a word in the current line,
where words are defined as sequences of blank/non-blank characters.
A count repeats the effect (2.4).
.iP "X" 15
Deletes the character before the cursor.  A count repeats the effect,
but only characters on the current line are deleted.
.iP "Y" 15
Yanks a copy of the current line into the unnamed buffer, to be put back
by a later \f3p\f1 or \f3P\f1; a very useful synonym for \f3yy\f1. 
A count yanks that many lines.  May be preceded by a buffer name to put
lines in that buffer (7.4).
.iP "ZZ" 15
Exits the editor.
(Same as \f3:x\fP\s-2CR\s0.)
If any changes have been made, the buffer is written out to the current file.
Then the editor quits.
.iP "[[" 15
Backs up to the previous section boundary.  A section begins at each
macro in the \f2sections\f1 option,
normally a `.NH' or `.SH' and also at lines which which start
with a formfeed \f3^L\f1.  Lines beginning with \f3{\f1 also stop \f3[[\f1;
this makes it useful for looking backwards, a function at a time, in C
programs.  If the option \f2lisp\f1 is set, stops at each \f3(\f1 at the
beginning of a line, and is thus useful for moving backwards at the top
level \s-2LISP\s0 objects. (4.2, 6.1, 6.6, 7.2).
.iP "\e" 15
Unused.
.iP "]]" 15
Forward to a section boundary, see \f3[[\f1 for a definition (4.2, 6.1,
6.6, 7.2).
.iP "\(ua" 15
Moves to the first non-white position on the current line (4.4).
.iP "_" 15
Unused.
.iP "\(ga" 15
When followed by a \f3\(ga\f1 returns to the previous context.
The previous context is set whenever the current
line is moved in a non-relative way.
When followed by a letter \f3a\f1\-\f3z\f1, returns to the position which
was marked with this letter with a \f3m\f1 command.
When used with an operator such as \f3d\f1, the operation takes place
from the exact marked place to the current position within the line;
if you use \f3\(aa\f1, the operation takes place over complete lines
(2.2, 5.3).
.iP "a" 15
Appends arbitrary text after the current cursor position; the insert
can continue onto multiple lines by using \s-2RETURN\s0 within the insert.
A count causes the inserted text to be replicated, but only if the inserted
text is all on one line.
The insertion terminates with an \s-2ESC\s0 (3.1, 7.2).
.iP "b" 15
Backs up to the beginning of a word in the current line.  A word is a
sequence of alphanumerics, or a sequence of special characters.
A count repeats the effect (2.4).
.iP "c" 15
An operator which changes the following object, replacing it with the
following input text up to an \s-2ESC\s0.  If more than part of a single
line is affected, the text which is changed away is saved in the numeric named
buffers.  If only part of the current line is affected, then the last
character to be changed away is marked with a \f3$\f1.
A count causes that many objects to be affected, thus both
\f33c)\f1 and \f3c3)\f1 change the following three sentences (7.4).
.iP "d" 15
An operator which deletes the following object.  If more than part of
a line is affected, the text is saved in the numeric buffers.
A count causes that many objects to be affected; thus \f33dw\f1 is the
same as \f3d3w\f1 (3.3, 3.4, 4.1, 7.4).
.iP "e" 15
Advances to the end of the next word, defined as for \f3b\f1 and \f3w\f1.
A count repeats the effect (2.4, 3.1).
.iP "f" 15
Finds the first instance of the next character following the cursor on
the current line.  A count repeats the find (4.1).
.iP "g" 15
Unused.
.sp
Arrow keys
.B h ,
.B j ,
.B k ,
.B l ,
and
.B H .
.iP "h" 15
.B "Left arrow" .
Moves the cursor one character to the left.
Like the other arrow keys, either
.B h ,
the
.B "left arrow"
key, or one of the synonyms (\f3^H\fP) has the same effect.
On v2 editors, arrow keys on certain kinds of terminals
(those which send escape sequences, such as vt52, c100, or hp)
cannot be used.
A count repeats the effect (3.1, 7.5).
.iP "i" 15
Inserts text before the cursor, otherwise like \f3a\f1 (7.2).
.iP "j" 15
.B "Down arrow" .
Moves the cursor one line down in the same column.
If the position does not exist,
.I vi
comes as close as possible to the same column.
Synonyms include
.B ^J
(linefeed) and
.B ^N .
.iP "k" 15
.B "Up arrow" .
Moves the cursor one line up.
.B ^P
is a synonym.
.iP "l" 15
.B "Right arrow" .
Moves the cursor one character to the right.
\s-2SPACE\s0 is a synonym.
.iP "m" 15
Marks the current position of the cursor in the mark register which is
specified by the next character \f3a\f1\-\f3z\f1.  Return to this position
or use with an operator using \f3\(ga\f1 or \f3\(aa\f1 (5.3).
.iP "n" 15
Repeats the last \f3/\f1 or \f3?\f1 scanning commands (2.2).
.iP "o" 15
Opens new lines below the current line; otherwise like \f3O\f1 (3.1).
.iP "p" 15
Puts text after/below the cursor; otherwise like \f3P\f1 (6.3).
.iP "q" 15
Unused.
.iP "r" 15
Replaces the single character at the cursor with a single character you
type.  The new character may be a \s-2RETURN\s0; this is the easiest
way to split lines.  A count replaces each of the following count characters
with the single character given; see \f3R\f1 above which is the more
usually useful iteration of \f3r\f1 (3.2).
.iP "s" 15
Changes the single character under the cursor to the text which follows
up to an \s-2ESC\s0; given a count, that many characters from the current
line are changed.  The last character to be changed is marked with \f3$\f1
as in \f3c\f1 (3.2).
.iP "t" 15
Advances the cursor upto the character before the next character typed.
Most useful with operators such as \f3d\f1 and \f3c\f1 to delete the
characters up to a following character.  You can use \f3.\f1 to delete
more if this doesn't delete enough the first time (4.1).
.iP "u" 15
Undoes the last change made to the current buffer.  If repeated, will
alternate between these two states, thus is its own inverse. When used
after an insert which inserted text on more than one line, the lines are
saved in the numeric named buffers (3.5).
.iP "v" 15
Unused.
.iP "w" 15
Advances to the beginning of the next word, as defined by \f3b\f1 (2.4).
.iP "x" 15
Deletes the single character under the cursor.  With a count deletes
deletes that many characters forward from the cursor position, but only
on the current line (6.5).
.iP "y" 15
An operator, yanks the following object into the unnamed temporary buffer.
If preceded by a named buffer specification, \f3"\f1\f2x\f1, the text
is placed in that buffer also.  Text can be recovered by a later \f3p\f1
or \f3P\f1 (7.4).
.iP "z" 15
Redraws the screen with the current line placed as specified by the following
character: \s-2RETURN\s0 specifies the top of the screen, \f3.\f1 the
center of the screen, and \f3\-\f1 at the bottom of the screen.
A count may be given after the \f3z\f1 and before the following character
to specify the new screen size for the redraw.
A count before the \f3z\f1 gives the number of the line to place in the
center of the screen instead of the default current line. (5.4)
.iP "{" 15
Retreats to the beginning of the beginning of the preceding paragraph.
A paragraph begins at each macro in the \f2paragraphs\f1 option, normally
`.IP', `.LP', `.PP', `.QP' and `.bp'.
A paragraph also begins after a completely
empty line, and at each section boundary (see \f3[[\f1 above) (4.2, 6.8,
7.6).
.iP "|" 15
Places the cursor on the character in the column specified
by the count (7.1, 7.2).
.iP "}" 15
Advances to the beginning of the next paragraph.  See \f3{\f1 for the
definition of paragraph (4.2, 6.8, 7.6).
.iP "~" 15
Unused.
.iP "^?\ (\s-2\f1DEL\fP\s0)" 15
Interrupts the editor, returning it to command accepting state (1.5,
7.5)
.bp
\&.
