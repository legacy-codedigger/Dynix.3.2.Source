.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: ecvt.3 1.6 90/02/16 $
.TH ECVT 3 "\*(V)" "7th Edition"
.SH NAME
ecvt, fcvt, gcvt \- output conversion
.SH SYNOPSIS
.nf
.B char *ecvt(value, ndigit, decpt, sign)
.B double value;
.B int ndigit, *decpt, *sign;
.PP
.B char *fcvt(value, ndigit, decpt, sign)
.B double value;
.B int ndigit, *decpt, *sign;
.PP
.B char *gcvt(value, ndigit, buf)
.B double value;
.B char *buf;
.fi
.SH DESCRIPTION
.I Ecvt
converts the 
.I value
to a null-terminated string of
.I ndigit
ASCII digits and returns a pointer thereto.
The position of the decimal point relative to the
beginning of the string is stored indirectly through
.IR decpt ""
(negative means to the left of the returned digits).
If the sign of the result is negative, the word pointed to by
.IR sign ""
is non-zero, otherwise it is zero.  The low-order digit is rounded.
.PP
.IR Fcvt " is identical to " "ecvt\f1, except that the correct digit"
has been rounded for Fortran F-format output of the number
of digits specified by
.IR \(*_ndigits .
.PP
.I Gcvt
converts the
.I value
to a null-terminated ASCII string in
.I buf
and returns a pointer to 
.I buf.
It attempts to produce
.I ndigit
significant digits in Fortran F format if possible, otherwise E format,
ready for printing.  Trailing zeros may be suppressed.
.SH LIMITATIONS
.I Ecvt 
is not designed to convert an infinite 
.I value.
.SH "SEE ALSO"
printf(3)
.SH BUGS
The return values point to static data
whose content is overwritten by each call.
