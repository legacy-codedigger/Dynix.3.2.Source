.\" $Copyright: $
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
.\"
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.  This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: strings.1 1.7 1991/06/12 16:58:20 $
.TH STRINGS 1 "\*(V)" "3BSD"
.SH NAME
strings \- find the printable strings in an object
(or other binary)
file
.SH SYNOPSIS
.B strings
[
.B \-
] [
.B \-o
] [
\f3\-\f2number\f1
] file ...
.SH DESCRIPTION
.I Strings
looks for ascii strings in a binary file.
A string is any sequence of 4 or more printing characters
ending with a newline or a null.
Unless the
.B \-
flag is given,
.I strings
only looks in the initialized data space of object files.
If the
.B \-o
flag is given,
then each string is preceded by its offset in the file
(in decimal).
If the
\f3\-\f2number\f1
flag is given then \f2number\fP is used
(instead of 4)
as the minimum string length.
.PP
.I Strings
is useful for identifying random object files and many other things.
.SH "SEE ALSO"
od(1)
.SH BUGS
The algorithm for identifying strings is extremely primitive.
