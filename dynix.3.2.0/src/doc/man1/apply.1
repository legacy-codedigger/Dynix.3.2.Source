.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: apply.1 1.6 86/05/19 $
.TH APPLY 1 "\*(V)" "7th Edition"
.SH NAME
apply \- apply a command to a set of arguments
.SH SYNOPSIS
.B apply
[
.B \-v
] [
.B \-P\f2n\fP
] [
.B \-a\f2c\fP
] [
.B \-\f2n\fP
] command args ...
.SH DESCRIPTION
.I Apply
runs the named
.I command
on each
argument
.I arg
in turn.
Normally arguments are chosen singly; the optional number
.I n
specifies the number of arguments to be passed to
.I command.
If
.I n
is zero,
.I command
is run without arguments once for each
.I arg.
Character sequences of the form %\f2d\fP
in
.I command,
where
.I d
is a digit from 1 to 9,
are replaced by the
\f2d\fP'th following unused
.I arg.
If any such sequences occur,
.I n
is ignored,
and the number of arguments passed to
.I command
is the maximum value of
.I d
in
.I command.
The character `%' may be changed by the
.B \-a
option.
The
.B \-v
option causes
.I apply
to print each 
.I command 
to stderr before it is run.
.PP
Examples:
.RS
apply echo *
.RE
is similar to ls(1);
.RS
apply \-2 cmp a1 b1 a2 b2 ...
.RE
compares the `a' files to the `b' files;
.RS
apply \-0 who 1 2 3 4 5
.RE
runs who(1) 5 times; and
.RS
apply \(aaln %1 /usr/joe\(aa *
.RE
links all files in the current directory to the directory /usr/joe.
.SH "PARALLEL SUPPORT"
.I Apply
runs
.I n 
.I commands
concurrently, where
.I n
is given in the
.B -P\f2n\fP
option.
If the
.B -P\f2n\fP
option is missing,
.I apply
looks for the environment variable
.B
.SM PARALLEL
and uses its numeric value for
.I n.
If this fails,
.I n
defaults to 1.
.SH "SEE ALSO"
sh(1), make(1), environ(7)
.SH AUTHOR
Rob Pike
.SH BUGS
Shell metacharacters in
.I command
may have bizarre effects; it is best to enclose complicated
commands in single quotes \(aa\ \(aa.
.sp
There is no way to pass a literal `%2' if `%' is the
argument expansion character.
