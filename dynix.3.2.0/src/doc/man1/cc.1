.\" $Copyright: $
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: cc.1 1.26 1991/07/23 18:07:51 $
.TH CC 1 "\*(V)" "DYNIX"
.SH NAME
cc \- C compiler
.SH SYNOPSIS
.B cc
[ option ] ... file ...
.SH DESCRIPTION
.I Cc
is the DYNIX C compiler.
The DYNIX compiler supports parallel programming
(refer to the
.IR "Guide to Parallel Programming" ).
.I Cc
accepts several types of arguments:
.PP
Arguments whose names end with `.c' are taken to be C source programs;
they are compiled,
and each object program is left on the file whose name is that of
the source with `.o' substituted for `.c'.
The `.o' file is normally deleted
if a single C program is compiled and loaded all at once.
.PP
In the same way,
arguments whose names end with `.s' are taken to be assembly source
programs;
they are assembled,
producing `.o' files.
.PP
The following options are interpreted by
.IR cc .
See
.IR ld (1)
for load-time options.
.TP 8
.B \-c
Suppress the loading phase of the compilation;
force an object file to be produced
even if only one program is compiled.
.TP
.B \-g
Have the compiler produce additional symbol table information for
.IR pdbx (1).
Also pass the
.B \-lg
flag to
.IR ld (1).
.TP
.B \-go
Have the compiler produce additional symbol table information
for the obsolete debugger
.IR sdb (1).
Also pass the
.B \-lg
flag to
.IR ld (1).
.TP
.B \-w
Suppress warning diagnostics.
.TP
.B \-p
Produce code that counts the number of times each routine is called.
If loading takes place,
replace the standard startup routine by one that automatically calls
.IR monitor (3)
at the start and arranges to write out a
.I mon.out
file at normal termination of execution of the object program.
An execution profile can then be generated by using
.IR  prof (1).
.TP
.B \-pg
Produce counting code in the manner of
.B \-p,
but invoke a run-time recording mechanism that keeps more extensive
statistics and produces a
.I gmon.out
file at normal termination.
Also,
a profiling library is searched,
in lieu of the standard C library.
An execution profile can then be generated by using
.IR gprof (1).
.TP
.SM
.B \-O
Invoke an object-code improver.
Do not use on programs that contain
.B asm
statements,
as the result may not be correct.
.TP
.B \-Y
Causes all external or static variables not explicitly
declared as shared or private to be shared.
(Refer to the
.I "C Compiler User's Manual"
for information on the
.I shared
and
.I private
keywords.
.TP
.B \-i
Suppress optimizations that are incorrect when memory locations might
spontaneously change value.
Memory-mapped registers have this property.
This option has no effect if
.B \-O
is not selected.
.TP
.SM
.B \-R
Passed on to
.I as,
making initialized variables shared and read-only.
.TP
.SM
.B \-S
Compile the named C programs,
and leave the assembler-language output on corresponding files with
a `.s' suffix.
.TP
.SM
.B \-SO
Compile the named C programs and send the assembler-language output
to standard output.
.TP
.SM
.B \-E
Run only the macro preprocessor on the named C programs,
and send the result to the standard output.
.TP
.SM
.B \-C
prevent the macro preprocessor from removing comments.
.TP
.BI \-o " output"
Name the final output file
.IR output .
If this option is used the file `a.out' will be left undisturbed.
.TP
.B \-v
List
(on standard error)
the utilities called by
.I cc
and their arguments.
Information produced by the
.B \-v
flag is useful for debugging.
.TP
.B \-vn
Like
.BR \-v ,
but
.I cc
does not actually call the utilities.
.TP
.SM
.BI \-D name=def
.br
.ns
.TP
.SM
.BI \-D \*Sname
Define the
.I name
to the preprocessor,
as if by `#define'.
If no definition is given,
the name is defined as "1".
.TP
.SM
.BI \-U \*Sname
Remove any initial definition of
.IR name .
(The C preprocessor initially defines
.I sequent,
and
.I unix
as `1'.
On Balance systems
.I ns32000,
and on Symmetry systems
.I i386,
are initially defined as `1').
.TP
.SM
.BI \-I \*Sdir
Normally,
`#include' files whose names do not begin with `/' are sought
first in the directory of the
.I file
argument.
If the
.B \-I
option is given,
.I dir
is searched,
not the directory within which
.I file
is located.
If the `#include' files are not located after searching
.I dir
(when
.B \-I
is specified) or the directory within which
.I file
is located (when
.B \-I
is not specified),
the directories in a standard list are then searched for the `#include' files.
.TP
.SM
.BI \-B \*Sstring
Find substitute compiler passes in the files named
.I string
with the suffixes cpp,
ccom,
and c2.
If
.I string
is empty,
use a standard backup version.
.TP
.BR \-t [ p02 ]
Find only the designated compiler passes in the files whose names
are constructed by a
.B \-B
option.
In the absence of a
.B \-B
option,
the
.I string
is taken to be `/usr/c/o'.
.TP
.B \-M
Run only the macro preprocessor on the named C programs,
requesting it to generate Makefile dependencies and send the result to
standard output.
.TP
\f3\-f1167\fP\ or\ \f3\-fpa\fP
.B \-fpa
is a synonym for
.B \-f1167 .
This option directs the Symmetry C compiler to produce code
for the Weitek 1167 floating-point accelerator.
By default, the Symmetry C compiler produces code for the Intel
80387 floating-point processor.
The Balance C compiler ignores this option.
On Symmetry systems,
files compiled with
.B \-f1167
may be linked with files compiled without
.BR \-f1167 ,
so long as 80387 functions don't return floating-point data to 1167 routines,
and vice-versa.
The
.B \-f1167
option is passed to the loader,
which selects the Weitek versions of the C run-time libraries.
The loader issues a warning if code compiled with
.B \-f1167
is linked with code compiled without
.BR \-f1167 .
.PP
Other arguments are taken to be loader option arguments,
C-compatible object programs produced by an earlier
.I cc
run,
or libraries of C-compatible routines.
These programs,
together with the results of any compilations specified,
are loaded
(in the order given)
to produce an executable program with name
.B a.out.
.SH FILES
.ta \w'/usr/local/include  'u
file.c	input file
.br
file.o	object file
.br
file.s	assembly file
.br
a.out	loaded output
.br
/tmp/ctm?	temporary
.br
/lib/cpp	preprocessor
.br
/lib/ccom	compiler
.br
/lib/c2	optional optimizer
.br
/lib/crt0.o	runtime startoff
.br
/lib/mcrt0.o	startoff for profiling
.br
/usr/lib/gcrt0.o	startoff for gprof-profiling
.br
/lib/libc.a	standard library, see
.IR intro (3)
.br
/usr/lib/libc_p.a	profiling library, see
.IR intro (3)
.br
/usr/lib/libpps.a	Parallel Programming Library, see
.IR intro (3)
.br
/usr/include	standard directory for `#include' files
.br
/usr/local/include	local directory for `#include' files
.br
mon.out	file produced for analysis by
.IR prof (1)
.br
gmon.out	file produced for analysis by
.IR gprof (1)
.SH "SEE ALSO"
B. W. Kernighan and D. M. Ritchie,
.I The C Programming Language,
Prentice-Hall,
1978
.br
B. W. Kernighan,
.I
Programming in C\(ema tutorial
.br
D. M. Ritchie,
.I
C Reference Manual
.br
.I
C Compiler User's Manual
.br
.I
Guide to Parallel Programming
.br
monitor(3), prof(1), gprof(1), ddt(1), ld(1), pdbx(1), as(1)
.SH DIAGNOSTICS
The diagnostics produced by C are intended to be self-explanatory.
Occasional messages may be produced by the assembler or loader.
.SH NOTES
Unlike many other compilers, the DYNIX C compiler
treats the words
.I shared
and
.I private
as keywords, and so these words cannot be used as identifiers.
This occasionally causes confusion when code containing these identifiers
is ported from other systems.
.SH BUGS
The compiler ignores advice to put
\f3char\fP,
\f3unsigned char\fP,
\f3short\fP,
or \f3unsigned short\fP variables in registers.
