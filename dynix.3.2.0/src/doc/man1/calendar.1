.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: calendar.1 1.4 86/05/13 $
.TH CALENDAR 1 "\*(V)" "4BSD"
.SH NAME
calendar \- reminder service
.SH SYNOPSIS
.B calendar
[ \- ]
.SH DESCRIPTION
.I Calendar 
consults the file `calendar' in the current directory
and prints out lines that contain today's or
tomorrow's date anywhere in the line.
Most reasonable month-day dates such as `Dec. 7,'
`december 7,' `12/7,' etc., are recognized, but not
`7 December' or `7/12'.
If you give the month as ``*''
with a date, i.e. ``* 1'', that day in any month will do.
On weekends `tomorrow' extends through Monday.
.PP
When 
an argument is present,
.I calendar
does its job for every user
who has a file `calendar' in his login directory
and sends him any positive results by
.IR mail (1).
Normally this is done daily in the wee hours under control of
.IR cron (8).
.PP
The file `calendar' is first run through the ``C'' preprocessor,
.IR /lib/cpp ,
to include any other calendar files
specified with the usual ``#include'' syntax.
Included calendars will usually be shared by all users,
maintained and documented by the local administration.
.SH FILES
calendar
.br
/usr/lib/calendar to figure out today's and tomorrow's dates
.br
/etc/passwd
.br
/tmp/cal*
.br
/lib/cpp, egrep, sed, mail as subprocesses
.SH "SEE ALSO"
at(1), cron(8), mail(1)
.SH BUGS
.I Calendar's
extended idea of `tomorrow' doesn't account for
holidays.
