.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: write.2 1.9 89/07/10 $
.TH WRITE 2 "\*(V)" "4BSD"
.SH NAME
write, writev \- write on a file
.SH SYNOPSIS
.nf
.ft 3
write(d, buf, nbytes)
int d;
char *buf;
int nbytes;
.PP
.ft 3
#include <sys/types.h>
#include <sys/uio.h>
.PP
.ft 3
writev(d, iov, ioveclen)
int d;
struct iovec *iov;
int ioveclen;
.fi
.SH DESCRIPTION
.I Write
attempts to write
.I nbytes
of data to the object referenced by the descriptor
.I d
from the buffer pointed to by
.IR buf .
.I Writev
performs the same action, but gathers the output data
from the \f2iovlen\fP buffers specified by the members
of the \f2iovec\fP array: iov[0], iov[1], etc.
.PP
On objects capable of seeking, the \f2write\fP starts at a position
given by the pointer associated with
.IR d ,
see
.IR lseek (2).
Upon return from
.IR write ,
the pointer is incremented by the number of bytes actually written.
.PP
Objects that are not capable of seeking always write from the current
position.  The value of the pointer associated with such an object
is undefined.
.PP
For regular files, if the O_SYNC flag of the file status flags is
set (see
.IR open (2)
and
.IR fcntl (2)),
the write will not return until both the file data and file status have
been physically updated.
This function is for special applications that require extra reliability
at the cost of performance.
For block special files, if the O_SYNC flag is set, the write will not
return until the data has been physically updated.
.PP
If the real user is not the super-user, then
.I write
clears the set-user-id bit on a file.
This prevents penetration of system security
by a user who
\*(lqcaptures\*(rq a writable set-user-id file
owned by the super-user.
.SH "RETURN VALUE
Upon successful completion the number of bytes actually writen
is returned.  Otherwise a \-1 is returned and
.I errno
is set to indicate the error.
.SH ERRORS
.I Write
will fail and the file pointer will remain unchanged if one or more
of the following are true:
.TP 15
[EBADF]
\f2D\fP is not a valid descriptor open for writing.
.TP 15
[EPIPE]
An attempt is made to write to a pipe that is not open
for reading by any process.
.TP 15
[EPIPE]
An attempt is made to write to a socket of type SOCK_STREAM
which is not connected to a peer socket.
.TP 15
[EFBIG]
An attempt was made to write a file that exceeds the process's
file size limit or the maximum file size.
.TP 15
[EFAULT]
Part of \f2iov\fP or data to be written to the file
points outside the process's allocated address space.
.TP 15
[ENOMEM]
The size of the write requested to a raw device would have
required the process to exceed its maximum resident set size.
.TP 15
[ENOSPC]
There is no free space remaining on the file system containing the file.
.TP 15
[EIO]
An I/O error occurred while reading from or writing to the file system.
.SH "SEE ALSO"
lseek(2), open(2), pipe(2)
