.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: creat.2 1.7 90/12/19 $
.TH CREAT 2 "\*(V)" "4BSD"
.SH NAME
creat \- create a new file
.SH SYNOPSIS
.nf
.B creat(name, mode)
.B char *name;
.fi
.SH DESCRIPTION
.B "This interface is obsoleted by open(2).
.PP
.I Creat
creates a new file or prepares to rewrite an existing
file called 
.IR name ,
given as the address of a null-terminated string.
If the file did not exist, it is given
mode
.IR mode ,
as modified by the process's mode mask (see
.IR umask (2)).
Also see
.IR  chmod (2)
for the
construction of the
.I mode
argument.
.PP
If the file did exist, its mode and owner remain unchanged
but it is truncated to 0 length.
.PP
The file is also opened for writing, and its file descriptor
is returned.
.SH NOTES
The
.I mode
given is arbitrary; it need not allow
writing.
This feature has been used in the past by
programs to construct a simple exclusive locking
mechanism.  It is replaced by the O_EXCL open
mode, or 
.IR flock (2)
facility.
.PP
The file thus created will inherit the parent directory's group id.
The setgid option will only be set if the group of the file lies in
the creating process's group set, otherwise the option will be automatically
turned off.
.SH "RETURN VALUE
The value \-1 is returned if an error occurs.  Otherwise,
the call returns a non-negative descriptor which only permits
writing.
.SH ERRORS
.I Creat
will fail and the file will not be created or truncated
if one of the following occur:
.TP 15
[EPERM]
The argument contains a byte with the high-order bit set.
.TP 15
[ENOTDIR]
A component of the path prefix is not a directory.
.TP 15
[EACCES]
A needed directory does not have search permission.
.TP 15
[EACCES]
The file does not exist and the directory
in which it is to be created is not writable.
.TP 15
[EACCES]
The file exists, but it is unwritable.
.TP 15
[EISDIR]
The file is a directory.
.TP 15
[EMFILE]
There are already too many files open.
.TP 15
[EROFS]
The named file resides on a read-only file system.
.TP 15
[ENXIO]
The file is a character special or block special file, and
the associated device does not exist.
.TP 15
[ETXTBSY]
The file is a pure procedure (shared text) file that is being
executed.
.TP 15
[EFAULT]
.I Name
points outside the process's allocated address space.
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the
pathname.
.TP 15
[EOPNOTSUPP]
The file was a socket (not currently implemented).
.TP 15
[ENOENT]
A component of the path name which must exist does not exist.
.TP 15
[ENOENT]
The path name was too long.
.TP 15
[ENFILE]
The file system table is full.
.TP 15
[ENOSPC]
The directory in which the entry for the new file is being placed
cannot be extended because there is no space left on the file system
containing the directory.
.TP 15
[ENOSPC]
There are no free inodes on the file system in which the file is being created.
.TP 15
[EIO]
An I/O error occurred while reading from or writing to the file system.
.SH "SEE ALSO"
open(2), write(2), close(2), chmod(2), umask(2)
