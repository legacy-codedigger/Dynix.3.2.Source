.\" $Copyright:	$
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990 
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: mknod.2 1.12 90/12/19 $
.TH MKNOD 2 "\*(V)" "4BSD"
.SH NAME
mknod \- make a special file
.SH SYNOPSIS
.nf
.ft 3
#include <sys/stat.h>
mknod(path, mode, dev)
char *path;
int mode, dev;
.fi
.ft 1
.SH DESCRIPTION
.I Mknod
creates a new file
whose name is
.I path.
The mode of the new file
(including special file bits)
is initialized from
.IR mode .
(The protection part of the mode
is modified by the process's mode mask; see
.IR umask (2)).
The first block pointer of the i-node
is initialized from
.I dev 
and is used to specify which device the special file
refers to.
.PP
If mode indicates a block or character special file,
.I dev
is a configuration dependent specification of a character or block
I/O device.  If
.I mode
does not indicate a block special or character special device,
.I dev
is ignored.
.PP
.I Mknod
may be invoked only by the super-user, unless
.I mode
is type
.B S_IFIFO
(named pipe, refer to \f2/usr/include/sys/stat.h\fP),
in which case anyone can make the call.
.I Mknod
cannot be used to create a directory (use
\f2mkdir\f1).
.PP
The file thus created will inherit the parent directory's group id.
The setgid option will only be set if the group of the file lies in
the creating process's group set, otherwise the option will be automatically
turned off.
.SH "RETURN VALUE
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and \f2errno\fP
is set to indicate the error.
.SH ERRORS
.I Mknod
will fail and the file mode will be unchanged if:
.TP 15
[EPERM]
The process's effective user ID is not super-user.
.TP 15
[EPERM]
The pathname contains a character with the high-order bit set.
.TP 15
[ENOTDIR]
A component of the path prefix is not a directory.
.TP 15
[ENOENT]
A component of the path prefix does not exist.
.TP 15
[EROFS]
The named file resides on a read-only file system.
.TP 15
[EEXIST]
The named file exists.
.TP 15
[EFAULT]
.I Path
points outside the process's allocated address space.
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the pathname.
.TP 15
[ENOENT]
The path name is too long.
.TP 15
[EACCES]
A component of the path prefix denies search permission.
.TP 15
[ENOSPC]
The directory in which the entry for the new file is being placed
cannot be extended because there is no space left on the file system
containing the directory.
.TP 15
[ENOSPC]
There are no free inodes on the file system on which the file
is being created.
.TP 15
[EIO]
An I/O error occurred while reading from or writing to the file system.
.TP 15
[EISDIR]
.I Path
is a directory.
.SH "SEE ALSO"
chmod(2), stat(2), umask(2)
