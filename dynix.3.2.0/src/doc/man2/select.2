.\" $Copyright: $
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: select.2 1.10 1991/08/06 22:37:38 $
.TH SELECT 2 "\*(V)" "4BSD"
.SH NAME
select \- synchronous i/o multiplexing
.SH SYNOPSIS
.nf
\f3#include <sys/types.h>
\f3#include <sys/time.h>
.sp
nfound = select(nfds, readfds, writefds, execptfds, timeout)
int nfound, nfds;
fd_set *readfds, *writefds, *execptfds;
struct timeval *timeout;\f1
.PP
.ft B
FD_SET(fd, &fdset)	
FD_CLR(fd, &fdset)	
FD_ISSET(fd, &fdset)	
FD_ZERO(&fdset)	
int fd;
fd_set fdset;
.fi
.SH DESCRIPTION
.I Select
examines the i/o descriptors specified by the bit masks
.IR readfds ,
.IR writefds ,
and
.I execptfds
to see if they are ready for reading, writing, or have an exceptional
condition pending, respectively.
File descriptor 
.I f
is represented by the bit \*(lq1<<f\*(rq in
the mask.
.I Nfds
descriptors are checked,
i.e. the bits from 0 through
.IR nfds -1
in the masks are examined.
.I Select
returns, in place, a mask of those descriptors which are ready.
The total number of ready descriptors is returned in
.IR nfound .
.PP
The descriptor sets are stored as bit fields in arrays of integers.
The following macros are provided for manipulating such descriptor sets:
.I "FD_ZERO(&fdset)"
initializes a descriptor set
.I fdset
to the null set.
.I "FD_SET(fd, &fdset)"
includes a particular descriptor
.I fd
in
.IR fdset .
.I "FD_CLR(fd, &fdset)"
removes
.I fd
from
.IR fdset .
.I "FD_ISSET(fd, &fdset)"
is nonzero if
.I fd
is a member of
.IR fdset ,
zero otherwise.
The behavior of these macros is undefined if
a descriptor value is less than zero or greater than or equal to
.IR FD_SETSIZE ,
which is normally at least equal
to the maximum number of descriptors supported by the system.
.PP
If
.I timeout
is a non-zero pointer, it specifies a maximum interval to wait for the
selection to complete.  If 
.I timeout
is a zero pointer, the select blocks indefinitely.  To affect a poll, the
.I timeout
argument should be non-zero, pointing to a zero valued timeval structure.
.PP
Any of
.IR readfds ,
.IR writefds ,
and
.I execptfds
may be given as 0 if no descriptors are of interest.
.SH "RETURN VALUE
.I Select
returns the number of descriptors which are contained in
the bit masks,
or \-1 if an error occurred.
If the time limit expires then
.I select
returns 0.
.SH "ERRORS
An error return from \f2select\fP indicates:
.TP 15
[EBADF]
One of the bit masks specified an invalid descriptor.
.TP 15
[EINTR]
An signal was delivered before any of the selected for
events occurred or the time limit expired.
.TP 15
[EFAULT]
The memory pointed to by
.IR readfds ,
.IR writefds ,
.IR exceptfds ,
or
.I timeout
lies outside the valid address space for the process.
.SH SEE ALSO
accept(2), connect(2), read(2), write(2), recv(2), send(2), getdtablesize(2)
.SH BUGS
Although the provision of
.IR getdtablesize (2)
was intended to allow user programs to be written independent
of the kernel limit on the number of open files, the dimension
of a sufficiently large bit field for select remains a problem.
The default size FD_SETSIZE (currently 256) is somewhat larger than
the current kernel limit to the number of open files.
However, in order to accommodate programs which might potentially
use a larger number of open files with select, it is possible
to increase this size within a program by providing
a larger definition of FD_SETSIZE before the inclusion of <sys/types.h>.
.PP
The descriptor masks are always modified on return, even
if the call returns as the result of the timeout.
