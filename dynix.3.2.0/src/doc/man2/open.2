.\" $Copyright: $
.\" Copyright (c) 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991
.\" Sequent Computer Systems, Inc.   All rights reserved.
.\"  
.\" This software is furnished under a license and may be used
.\" only in accordance with the terms of that license and with the
.\" inclusion of the above copyright notice.   This software may not
.\" be provided or otherwise made available to, or used by, any
.\" other person.  No title to or ownership of the software is
.\" hereby transferred.
...
.V= $Header: open.2 1.12 1991/08/06 22:37:34 $
.TH OPEN 2 "\*(V)" "4BSD"
.SH NAME
open \- open a file for reading or writing, or create a new file
.SH SYNOPSIS
.nf
.ft 3
#include <sys/file.h>
.PP
.ft 3
open(path, flags, mode)
char *path;
int flags, mode;
.fi
.SH DESCRIPTION
.I Open
opens the file
.I path
for reading and/or writing, as specified by the
.I flags
argument and returns a descriptor for that file.
The
.I flags
argument may indicate the file is to be
created if it does not already exist (by specifying the
O_CREAT flag), in which case the file is created with mode
.I mode
as described in
.IR chmod (2)
and modified by the process' umask value (see
.IR umask (2)).
.PP
.I Path
is the address of a string of ASCII characters representing
a path name, terminated by a null character.
The flags specified are formed by
.IR or 'ing
the following values
.PP
.RS
 O_RDONLY	open for reading only
 O_WRONLY	open for writing only
 O_RDWR	open for reading and writing
 O_NDELAY	do not block on open
 O_APPEND	append on each write
 O_SYNC		enable synchronous writes
 O_CREAT	create file if it does not exist
 O_TRUNC	truncate size to 0
 O_EXCL	error if create and file exists
.RE
.PP
Opening a file with O_APPEND set causes each write on the file
to be appended to the end.  Opening a file with O_SYNC set causes
all writes to be synchronous if the file is a regular or block
special file.  If O_TRUNC is specified and the
file exists, the file is truncated to zero length.
If O_EXCL is set with O_CREAT, then if the file already
exists, the open returns an error.  This can be used to
implement a simple exclusive access locking mechanism.
If the O_NDELAY flag is specified and the open call would result
in the process being blocked for some reason (e.g. waiting for
carrier on a dialup line), the open returns immediately. 
The first time the process attempts to perform i/o on the open
file it will block (not currently implemented, but will
be added in a future release).
.PP
Upon successful completion a non-negative integer termed a
file descriptor is returned.
The file pointer used to mark the current position within the
file is set to the beginning of the file.
.PP
The new descriptor is set to remain open across
.IR execve
system calls; see
.IR close (2).
.PP
The default maximum number of open files for a process is 20. However the
system call "setdtablesize" will allow the users increase this number
to a system defined maximum (see setdtablesize(2)).
.SH "ERRORS
The named file is opened unless one or more of the
following are true:
.TP 15
[EPERM]
The pathname contains a character with the high-order bit set.
.TP 15
[ENOTDIR]
A component of the path prefix is not a directory.
.TP 15
[ENOENT]
O_CREAT is not set and the named file does not exist.
.TP 15
[EACCES]
A component of the path prefix denies search permission.
.TP 15
[EACCES]
The required permissions (for reading and/or writing)
are denied for the named flag.
.TP 15
[EISDIR]
The named file is a directory, and the arguments specify
it is to be opened for writting.
.TP 15
[EROFS]
The named file resides on a read-only file system,
and the file is to be modified.
.TP 15
[EMFILE]
{OPEN_MAX} file descriptors are currently open.
.TP 15
[ENXIO]
The named file is a character special or block
special file, and the device associated with this special file
does not exist.
.TP 15
[ETXTBSY]
The file is a pure procedure (shared text) file that is being
executed and the \f2open\fP call requests write access.
.TP 15
[EFAULT]
.I Path
points outside the process's allocated address space.
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the pathname.
.TP 15
[EEXIST]
O_EXCL and O_CREAT were specified and the file already exists.
.TP 15
[ENXIO]
The O_NDELAY flag is given, and the file is a communications device
on which their is no carrier present.
.TP 15
[EOPNOTSUPP]
An attempt was made to open a socket (not currently implemented).
.TP 15
[EIO]
A special file generated an I/O error.
.TP 15
[EBUSY]
A special file (typically a terminal device) is already open for exclusive
access.
.TP 15
[ENOENT]
A component of the path name which must exist does not exist.
.TP 15
[ENOENT]
The path name is too long.
.TP 15
[EACCES]
O_CREAT is specified, the file does not exist,
and the directory in which the
entry for the file is to be created does not permit writing.
.TP 15
[ENFILE]
The system file table is full.
.TP 15
[ENOSPC]
O_CREAT is specified, the file does not exist,
and the directory in which the entry for the new file is being placed
cannot be extended because there is no space left on the file system
containing the directory.
.TP 15
[ENOSPC]
O_CREAT is specified, the file does not exist,
and there are no free inodes on the file system in which the file is
being created.
.TP 15
[EIO]
An I/O error occurred while reading from or writing to the file system.
.SH "SEE ALSO"
chmod(2), close(2), dup(2), lseek(2), read(2), write(2), umask(2)
